> Sys.setlocale("LC_TIME", "C")
[1] "C"
> Sys.setlocale("LC_COLLATE", "C")
[1] "C"
> Sys.setenv(TZ='EST') # so that tests that print out time zone work everywhere
> options(error = function() NULL, showErrorCalls = FALSE, warn=1)
> registerHolidays('NewYear', as.Date(ISOdate(1900:2000,1,1)))
> holidays(1990:2000,'NewYear')
 [1] "1990-01-01" "1991-01-01" "1992-01-01" "1993-01-01" "1994-01-01"
 [6] "1995-01-01" "1996-01-01" "1997-01-01" "1998-01-01" "1999-01-01"
[11] "2000-01-01"
> addToHolidays('NewYear',as.Date(ISOdate(2001:2010,1,1)))
> holidays(2005:2010,'NewYear')
[1] "2005-01-01" "2006-01-01" "2007-01-01" "2008-01-01" "2009-01-01"
[6] "2010-01-01"
> holidays(1990:2000,'NewYear')
 [1] "1990-01-01" "1991-01-01" "1992-01-01" "1993-01-01" "1994-01-01"
 [6] "1995-01-01" "1996-01-01" "1997-01-01" "1998-01-01" "1999-01-01"
[11] "2000-01-01"
> intersect(c('NONE', 'NewYear'), allHolidays())
[1] "NONE"    "NewYear"
> length(holidays(1800, "NewYear"))
#@gsub("^Warning in .*", "Warning in ...", both)
Warning in FUN(X[[1L]], ...) :
  Do not have any 'NewYear' holiday data for year(s) 1800.
[1] 0
> isHoliday(c("2005/1/1", "2009/1/1", "2009/1/2"), "NONE")
[1] FALSE FALSE FALSE
> unregisterHolidays('NewYear')
> intersect(c('NONE', 'NewYear'), allHolidays())
[1] "NONE"
> holidays(2000, "XXX")
Error in holidays(2000, "XXX") : No 'XXX' holidays exist.
>
